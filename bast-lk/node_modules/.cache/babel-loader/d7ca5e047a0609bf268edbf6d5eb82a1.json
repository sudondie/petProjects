{"remainingRequest":"C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.js.transform-quasar-imports.js!C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\quasar\\src\\utils\\private\\render.js","dependencies":[{"path":"C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\quasar\\src\\utils\\private\\render.js","mtime":499162500000},{"path":"C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.js.transform-quasar-imports.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgeyBoLCB3aXRoRGlyZWN0aXZlcyB9IGZyb20gJ3Z1ZSc7CmV4cG9ydCBmdW5jdGlvbiBoU2xvdChzbG90LCBvdGhlcndpc2UpIHsKICByZXR1cm4gc2xvdCAhPT0gdm9pZCAwID8gc2xvdCgpIHx8IG90aGVyd2lzZSA6IG90aGVyd2lzZTsKfQpleHBvcnQgZnVuY3Rpb24gaFVuaXF1ZVNsb3Qoc2xvdCwgb3RoZXJ3aXNlKSB7CiAgaWYgKHNsb3QgIT09IHZvaWQgMCkgewogICAgdmFyIHZub2RlID0gc2xvdCgpOwoKICAgIGlmICh2bm9kZSAhPT0gdm9pZCAwICYmIHZub2RlICE9PSBudWxsKSB7CiAgICAgIHJldHVybiB2bm9kZS5zbGljZSgpOwogICAgfQogIH0KCiAgcmV0dXJuIG90aGVyd2lzZTsKfQovKioKICogU291cmNlIGRlZmluaXRlbHkgZXhpc3RzLAogKiBzbyBpdCdzIG1lcmdlZCB3aXRoIHRoZSBwb3NzaWJsZSBzbG90CiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGhNZXJnZVNsb3Qoc2xvdCwgc291cmNlKSB7CiAgcmV0dXJuIHNsb3QgIT09IHZvaWQgMCA/IHNvdXJjZS5jb25jYXQoc2xvdCgpKSA6IHNvdXJjZTsKfQovKioKICogTWVyZ2Ugd2l0aCBwb3NzaWJsZSBzbG90LAogKiBldmVuIGlmIHNvdXJjZSBtaWdodCBub3QgZXhpc3QKICovCgpleHBvcnQgZnVuY3Rpb24gaE1lcmdlU2xvdFNhZmVseShzbG90LCBzb3VyY2UpIHsKICBpZiAoc2xvdCA9PT0gdm9pZCAwKSB7CiAgICByZXR1cm4gc291cmNlOwogIH0KCiAgcmV0dXJuIHNvdXJjZSAhPT0gdm9pZCAwID8gc291cmNlLmNvbmNhdChzbG90KCkpIDogc2xvdCgpOwp9Ci8qCiAqIChTdHJpbmcpICBrZXkgICAgICAgLSB1bmlxdWUgdm5vZGUga2V5CiAqIChCb29sZWFuKSBjb25kaXRpb24gLSBzaG91bGQgY2hhbmdlIE9OTFkgd2hlbiBhZGRpbmcvcmVtb3ZpbmcgZGlyZWN0aXZlCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGhEaXIodGFnLCBkYXRhLCBjaGlsZHJlbiwga2V5LCBjb25kaXRpb24sIGdldERpcnNGbikgewogIGRhdGEua2V5ID0ga2V5ICsgY29uZGl0aW9uOwogIHZhciB2bm9kZSA9IGgodGFnLCBkYXRhLCBjaGlsZHJlbik7CiAgcmV0dXJuIGNvbmRpdGlvbiA9PT0gdHJ1ZSA/IHdpdGhEaXJlY3RpdmVzKHZub2RlLCBnZXREaXJzRm4oKSkgOiB2bm9kZTsKfQ=="},{"version":3,"sources":["C:/Users/sudondie/Desktop/bastion-lk/node_modules/quasar/src/utils/private/render.js"],"names":["h","withDirectives","hSlot","slot","otherwise","hUniqueSlot","vnode","slice","hMergeSlot","source","concat","hMergeSlotSafely","hDir","tag","data","children","key","condition","getDirsFn"],"mappings":";;AAAA,SAASA,CAAT,EAAYC,cAAZ,QAAkC,KAAlC;AAEA,OAAO,SAASC,KAAT,CAAgBC,IAAhB,EAAsBC,SAAtB,EAAiC;AACtC,SAAOD,IAAI,KAAK,KAAK,CAAd,GACHA,IAAI,MAAMC,SADP,GAEHA,SAFJ;AAGD;AAED,OAAO,SAASC,WAAT,CAAsBF,IAAtB,EAA4BC,SAA5B,EAAuC;AAC5C,MAAID,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnB,QAAMG,KAAK,GAAGH,IAAI,EAAlB;;AACA,QAAIG,KAAK,KAAK,KAAK,CAAf,IAAoBA,KAAK,KAAK,IAAlC,EAAwC;AACtC,aAAOA,KAAK,CAACC,KAAN,EAAP;AACD;AACF;;AAED,SAAOH,SAAP;AACD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASI,UAAT,CAAqBL,IAArB,EAA2BM,MAA3B,EAAmC;AACxC,SAAON,IAAI,KAAK,KAAK,CAAd,GACHM,MAAM,CAACC,MAAP,CAAcP,IAAI,EAAlB,CADG,GAEHM,MAFJ;AAGD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASE,gBAAT,CAA2BR,IAA3B,EAAiCM,MAAjC,EAAyC;AAC9C,MAAIN,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnB,WAAOM,MAAP;AACD;;AAED,SAAOA,MAAM,KAAK,KAAK,CAAhB,GACHA,MAAM,CAACC,MAAP,CAAcP,IAAI,EAAlB,CADG,GAEHA,IAAI,EAFR;AAGD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASS,IAAT,CACLC,GADK,EAELC,IAFK,EAGLC,QAHK,EAILC,GAJK,EAKLC,SALK,EAMLC,SANK,EAOL;AACAJ,EAAAA,IAAI,CAACE,GAAL,GAAWA,GAAG,GAAGC,SAAjB;AAEA,MAAMX,KAAK,GAAGN,CAAC,CAACa,GAAD,EAAMC,IAAN,EAAYC,QAAZ,CAAf;AAEA,SAAOE,SAAS,KAAK,IAAd,GACHhB,cAAc,CAACK,KAAD,EAAQY,SAAS,EAAjB,CADX,GAEHZ,KAFJ;AAGD","sourcesContent":["import { h, withDirectives } from 'vue'\n\nexport function hSlot (slot, otherwise) {\n  return slot !== void 0\n    ? slot() || otherwise\n    : otherwise\n}\n\nexport function hUniqueSlot (slot, otherwise) {\n  if (slot !== void 0) {\n    const vnode = slot()\n    if (vnode !== void 0 && vnode !== null) {\n      return vnode.slice()\n    }\n  }\n\n  return otherwise\n}\n\n/**\n * Source definitely exists,\n * so it's merged with the possible slot\n */\nexport function hMergeSlot (slot, source) {\n  return slot !== void 0\n    ? source.concat(slot())\n    : source\n}\n\n/**\n * Merge with possible slot,\n * even if source might not exist\n */\nexport function hMergeSlotSafely (slot, source) {\n  if (slot === void 0) {\n    return source\n  }\n\n  return source !== void 0\n    ? source.concat(slot())\n    : slot()\n}\n\n/*\n * (String)  key       - unique vnode key\n * (Boolean) condition - should change ONLY when adding/removing directive\n */\nexport function hDir (\n  tag,\n  data,\n  children,\n  key,\n  condition,\n  getDirsFn\n) {\n  data.key = key + condition\n\n  const vnode = h(tag, data, children)\n\n  return condition === true\n    ? withDirectives(vnode, getDirsFn())\n    : vnode\n}\n"]}]}