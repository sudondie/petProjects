{"remainingRequest":"C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.js.transform-quasar-imports.js!C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--7!C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.vue.auto-import-quasar.js?kebab!C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-1!C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-2!C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\src\\App.vue?vue&type=template&id=7ba5bd90","dependencies":[{"path":"C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\src\\App.vue","mtime":1631196653521},{"path":"C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.js.transform-quasar-imports.js","mtime":499162500000},{"path":"C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1628298225000},{"path":"C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.vue.auto-import-quasar.js","mtime":499162500000},{"path":"C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\sudondie\\Documents\\GitHub\\Learning\\bastion-lk\\src\\App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"card\">\n            <form v-if=\"registered\" class=\"form-control\" @submit.prevent=\"bastLogin\">\n                <div class=\"card\" v-if=\"!smsSent\"><div class=\"card marked\"><img src=\"./assets/rus.svg\" alt=\"rus\"><p style=\"color: #000; margin: 0\">+7</p></div><input placeholder=\"Введите номер телефона\" type=\"text\" v-model=\"phoneNumber\"></div>\n                <input v-if=\"smsSent\" placeholder=\"Введите код из смс\" type=\"text\" v-model=\"code\">\n                <button class=\"btn\" @click=\"bastSms\" type=\"button\" :disabled=\"floodWait > 0\">Запрос смс</button>\n                <button class=\"btn primary\" :disabled=\"code.length<6\" type=\"submit\">Войти</button>\n                <p v-if=\"floodWait > 0\" style=\"color: red\">Отправить запрос можно через {{ floodWait }} секунд</p>\n                <q-btn :loading=\"loading[3]\" color=\"primary\" :disabled=\"floodWait > 0\" @click=\"simulateProgress(3);bastSms()\" style=\"width: 150px\">\n                    Запрос смс\n                    <template v-slot:loading>\n                        <q-spinner-hourglass class=\"on-left\" />\n                        {{ floodWait }}\n                    </template>\n                </q-btn>\n            </form>\n            <form v-else action=\"\" class=\"form-control\" @submit.prevent=\"bastRegister\">\n                <input type=\"text\" v-model=\"name\" >\n                <input type=\"text\" v-model=\"lastName\" >\n                <input type=\"text\" v-model=\"email\" >\n                <input type=\"text\" v-model=\"country\" >\n                <input type=\"text\" v-model=\"city\" >\n                <label for=\"proUser\">Профессиональный пользователь</label>\n                <input type=\"checkbox\" class=\"form-checkbox\" id=\"proUser\" v-model=\"proUser\" value=\"true\">\n                <button class=\"btn primary\">Зарегистрироваться</button>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { ref } from 'vue'\nexport default {\n  name: 'LayoutDefault',\n    setup () {\n        const loading = ref([\n            false,\n            false,\n            false,\n            false,\n            false,\n            false\n        ])\n\n        const progress = ref(false)\n\n        function simulateProgress (number) {\n            loading.value[ number ] = true\n            // simulate a delay\n            setInterval(() => {\n                if(this.floodWait > 0) {\n                    this.floodWait--\n                    loading.value[ number ] = false\n                }\n            }, 1000)\n        }\n\n        return {\n            loading,\n            progress,\n            simulateProgress\n        }\n    },\n    data() {\n        return {\n            myColor : 'darkred',\n            phoneNumber : '',\n            smsSent : false,\n            type : 'color',\n            floodWait : '',\n            code : '',\n            registrationToken : '',\n            registered : true,\n            name : '',\n            lastName : '',\n            email : '',\n            country: '',\n            city : '',\n            proUser : false,\n            errorMessage : ''\n        }\n    },\n    mounted() {\n        setInterval(() => {\n            if(this.floodWait > 0) {\n                this.floodWait--\n            }\n        }, 1000)\n    },\n    methods : {\n        async bastSms() {\n                const { data } = await axios.post('https://api-auth-bast.black-it.ru/api/v1/auth/request-code/no-captcha', {\n                    phoneNumber: `+7${this.phoneNumber}`\n                }).catch((error) => {\n                    if (error.response.status === 429) {\n                       this.floodWait = error.response.data.floodWait\n                        this.smsSent = false\n                    }\n                })\n                this.smsSent = true\n                this.floodWait = data.floodWait\n        },\n        async bastLogin() {\n            try {\n                const { data } = await axios.post('https://api-auth-bast.black-it.ru/api/v1/auth/login', {\n                    phoneNumber: `+7${this.phoneNumber}`,\n                    code: this.code\n                })\n                console.log(\"Ответ на логин: \",data)\n                this.registrationToken = data.registrationToken\n                this.registered = data.registered\n                console.log(this.registrationToken)\n                this.phoneNumber = ''\n                this.code = ''\n                this.floodWait = 0\n                this.smsSent = false\n\n            } catch(e) {\n                console.error(e.message)\n                console.log(this.registrationToken)\n            }\n        },\n        async bastRegister() {\n            try {\n                const {data} = axios.post('https://api-auth-bast.black-it.ru/api/v1/auth/registration', {\n                    registrationToken: this.registrationToken,\n                    firstName: this.name,\n                    lastName: this.lastName,\n                    phoneNumber: this.phoneNumber,\n                    isProfessionalUser: this.proUser,\n                    email: this.email,\n                    country: this.country,\n                    city: this.city\n                })\n                console.log('Ответ на регистрацию: ', data)\n            } catch (e) {\n                console.error(e.message)\n            }\n        }\n    }\n}\n</script>\n"],"sourceRoot":""}]}