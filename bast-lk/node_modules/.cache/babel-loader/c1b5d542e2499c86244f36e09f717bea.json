{"remainingRequest":"C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.js.transform-quasar-imports.js!C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\quasar\\src\\composables\\private\\use-can-render.js","dependencies":[{"path":"C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\quasar\\src\\composables\\private\\use-can-render.js","mtime":499162500000},{"path":"C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\sudondie\\Desktop\\bastion-lk\\node_modules\\vue-cli-plugin-quasar\\lib\\loader.js.transform-quasar-imports.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVmLCBvbk1vdW50ZWQgfSBmcm9tICd2dWUnOyAvLyB1c2luZyBpdCB0byBtYW5hZ2UgU1NSIHJlbmRlcmluZyB3aXRoIGJlc3QgcGVyZm9ybWFuY2UKCmltcG9ydCB7IGlzUnVudGltZVNzclByZUh5ZHJhdGlvbiB9IGZyb20gJy4uLy4uL3BsdWdpbnMvUGxhdGZvcm0uanMnOwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoKSB7CiAgdmFyIGNhblJlbmRlciA9IHJlZighaXNSdW50aW1lU3NyUHJlSHlkcmF0aW9uLnZhbHVlKTsKCiAgaWYgKGNhblJlbmRlci52YWx1ZSA9PT0gZmFsc2UpIHsKICAgIG9uTW91bnRlZChmdW5jdGlvbiAoKSB7CiAgICAgIGNhblJlbmRlci52YWx1ZSA9IHRydWU7CiAgICB9KTsKICB9CgogIHJldHVybiBjYW5SZW5kZXI7Cn0="},{"version":3,"sources":["C:/Users/sudondie/Desktop/bastion-lk/node_modules/quasar/src/composables/private/use-can-render.js"],"names":["ref","onMounted","isRuntimeSsrPreHydration","canRender","value"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,KAA/B,C,CAEA;;AACA,SAASC,wBAAT,QAAyC,2BAAzC;AAEA,eAAe,YAAY;AACzB,MAAMC,SAAS,GAAGH,GAAG,CAAC,CAACE,wBAAwB,CAACE,KAA3B,CAArB;;AAEA,MAAID,SAAS,CAACC,KAAV,KAAoB,KAAxB,EAA+B;AAC7BH,IAAAA,SAAS,CAAC,YAAM;AACdE,MAAAA,SAAS,CAACC,KAAV,GAAkB,IAAlB;AACD,KAFQ,CAAT;AAGD;;AAED,SAAOD,SAAP;AACD","sourcesContent":["import { ref, onMounted } from 'vue'\n\n// using it to manage SSR rendering with best performance\nimport { isRuntimeSsrPreHydration } from '../../plugins/Platform.js'\n\nexport default function () {\n  const canRender = ref(!isRuntimeSsrPreHydration.value)\n\n  if (canRender.value === false) {\n    onMounted(() => {\n      canRender.value = true\n    })\n  }\n\n  return canRender\n}\n"]}]}